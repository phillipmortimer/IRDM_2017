import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import numpy as np
import os
import inspect
import numpy as np

# Learning curve plots for RankLib

iters =  np.linspace(0,250,26)
iters[0] = 1
# len(iters) = 26
# array([   1.,   10.,   20.,   30.,   40.,   50.,   60.,   70.,   80.,
        #  90.,  100.,  110.,  120.,  130.,  140.,  150.,  160.,  170.,
        # 180.,  190.,  200.,  210.,  220.,  230.,  240.,  250.])


tc64_lr01_l1000 = [0.3793, 0.4063, 0.4081, 0.4104, 0.4134, 0.415 , 0.4172, 0.4183,
                   0.42  , 0.4216, 0.4241, 0.4254, 0.4264, 0.4276, 0.4287, 0.4304,
                   0.431 , 0.4312, 0.431 , 0.4312, 0.4328, 0.4343, 0.4343, 0.4349,
                   0.4345, 0.4359, 0.4358, 0.4372, 0.438 , 0.4396, 0.4412, 0.4414,
                   0.4412, 0.4406, 0.4418, 0.4429, 0.4432, 0.4433, 0.4442, 0.444 ,
                   0.4449, 0.4455, 0.4454, 0.4457, 0.4458, 0.4464, 0.4468, 0.4475,
                   0.4476, 0.4478, 0.4482, 0.4484, 0.4484, 0.4482, 0.4486, 0.4492,
                   0.4497, 0.4495, 0.4497, 0.45  , 0.4498, 0.4503, 0.4503, 0.4509,
                   0.451 , 0.4513, 0.4519, 0.451 , 0.4505, 0.4514, 0.4518, 0.4522,
                   0.4524, 0.4515, 0.4515, 0.4522, 0.4518, 0.4515, 0.4514, 0.4519,
                   0.4528, 0.4529, 0.4529, 0.4535, 0.4533, 0.4536, 0.4538, 0.4539,
                   0.4538, 0.4533, 0.4537, 0.4529, 0.4533, 0.4535, 0.4542, 0.454 ,
                   0.4539, 0.4542, 0.454 , 0.4541, 0.4544, 0.4548, 0.455 , 0.4546,
                   0.4541, 0.4546, 0.4545, 0.4553, 0.4547, 0.4547, 0.4538, 0.4536,
                   0.4534, 0.4538, 0.454 , 0.4542, 0.4545, 0.4542, 0.454 , 0.4542,
                   0.4543, 0.4547, 0.4547, 0.4543, 0.454 , 0.4543, 0.4538, 0.4534,
                   0.4534, 0.4531, 0.4537, 0.453 , 0.4529, 0.4536]

tc64_lr01_l1000_train = [0.4062, 0.437 , 0.4419, 0.4457, 0.4507, 0.4542, 0.4568,
                         0.4605, 0.464 , 0.4674, 0.4708, 0.4752, 0.4785, 0.4822,
                         0.4856, 0.4891, 0.4922, 0.4956, 0.4991, 0.5028, 0.5059,
                         0.5088, 0.5117, 0.5151, 0.5183, 0.5216, 0.5243, 0.5276,
                         0.5306, 0.5337, 0.5363, 0.5394, 0.542 , 0.5446, 0.5473,
                         0.5502, 0.5531, 0.5559, 0.5586, 0.5611, 0.5632, 0.5653,
                         0.5678, 0.5702, 0.5729, 0.5751, 0.578 , 0.5801, 0.5824,
                         0.5848, 0.5866, 0.5888, 0.5913, 0.5934, 0.5952, 0.5975,
                         0.5995, 0.6017, 0.6036, 0.6055, 0.6075, 0.6097, 0.6116,
                         0.6135, 0.6153, 0.617 , 0.6188, 0.6212, 0.6229, 0.6249,
                         0.6271, 0.6291, 0.631 , 0.6327, 0.6344, 0.6365, 0.638 ,
                         0.64  , 0.6418, 0.6435, 0.645 , 0.6465, 0.6484, 0.6501,
                         0.6513, 0.653 , 0.6544, 0.6559, 0.658 , 0.6596, 0.6612,
                         0.6635, 0.6645, 0.6662, 0.6679, 0.6697, 0.6712, 0.6723,
                         0.674 , 0.6752, 0.677 , 0.6788, 0.6802, 0.6819, 0.6832,
                         0.6846, 0.6858, 0.6875, 0.6886, 0.6899, 0.6913, 0.693 ,
                         0.6943, 0.696 , 0.6972, 0.6987, 0.7002, 0.7016, 0.7031,
                         0.7044, 0.7057, 0.7071, 0.7086, 0.7096, 0.7111, 0.7125,
                         0.7141, 0.7152, 0.7164, 0.7174, 0.7182, 0.7193, 0.7205,
                         0.7219]

tc256_lr01_l1 = []

tc256_lr01_l10 = []

tc256_lr01_l100 = []

tc256_lr01_l1000 = []

# Plot learning curves
fig = plt.figure()
plt.plot(list(range(len(tc64_lr01_l1000))), tc64_lr01_l1000, color="black", ls='-', label=r'validation')
plt.plot(list(range(len(tc64_lr01_l1000_train))), tc64_lr01_l1000_train, color="blue", ls=':', label=r'train')
plt.xlabel(r"Training iters (Tree)")
plt.ylabel(r"nDCG@10")
plt.legend(loc='upper left')
plt.xticks(list(range(0, 125, 25)))
plt.xlim(1,125)
fig.savefig('LambdaMART_64_overfit')
plt.close(fig)

# Plot learning curves
# fig = plt.figure()
# plt.plot(iters, tc256_lr01_l1, color="black", ls='-', label=r'1 leaves')
# plt.plot(iters, tc256_lr01_l10, color="blue", ls=':', label=r'10 leaves')
# plt.plot(iters, tc256_lr01_l100, color="red", ls='--', label=r'100 leaves')
# plt.plot(iters, tc256_lr01_l1000, color="green", ls=':', label=r'1000 leaves')
# plt.xlabel(r"Training iters (Tress)")
# plt.ylabel(r"nDCG@10")
# plt.legend(loc='lower left')
# plt.xticks(list(range(0, 21, 5)))
# plt.xlim(1,250)
# fig.savefig('LambdaMART_256_training')
# plt.close(fig)
